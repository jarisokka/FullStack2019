{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","person","post","id","delete","concat","put","Notification","_ref","notification","message","style","color","type","background","fontSize","borderStyle","borderRadius","padding","marginBottom","react_default","a","createElement","Filter","props","onChange","handleChange","value","Persons","persons","map","p","key","name","number","onClick","deletePerson","PersonForm","onSubmit","handleSubmit","handleNameChange","newName","handleNumberChange","newNumber","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filter","setFilter","_useState9","_useState10","setNotification","useEffect","personService","notify","arguments","length","undefined","setTimeout","personsToShow","toLowerCase","includes","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","existingPerson","find","window","confirm","objectSpread","replacedPerson","createdPerson","catch","error","teksti","JSON","stringify","App_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f167612a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const promise = axios.get(baseUrl)\r\n\r\n  return promise.then(response => response.data)\r\n}\r\n\r\nconst create = (person) => {\r\n  const promise = axios.post(baseUrl, person)\r\n\r\n  return promise.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const promise = axios.delete(`${baseUrl}/${id}`)\r\n\r\n  return promise.then(response => response.data)\r\n}\r\n\r\nconst replace = (person) => {\r\n  const promise = axios.put(`${baseUrl}/${person.id}`, person)\r\n\r\n  return promise.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll, create, remove, replace\r\n}","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification.message === null) {\r\n    return null\r\n  }\r\n\r\n  const style = {\r\n    color: notification.type === 'error' ? 'red' : 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n\r\n  return (\r\n    <div style={style}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      rajaa näytettäviä\r\n      <input onChange={props.handleChange} value={props.value} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Persons = (props) => {\r\n  return (\r\n    props.persons.map(p =>\r\n      <div key={p.name}>\r\n        {p.name} {p.number} <button onClick={()=>props.deletePerson(p.id)}>poista</button>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        nimi: <input onChange={props.handleNameChange} value={props.newName} />\r\n      </div>\r\n      <div>\r\n        numero: <input onChange={props.handleNumberChange} value={props.newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">lisää</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notification, setNotification] = useState({\r\n    message: null\r\n  })\r\n\r\n  useEffect(() => {\r\n    personService.getAll()\r\n      .then(data => {\r\n        setPersons(data)\r\n      })\r\n  }, [])\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  const handleFilterChange = (event) => setFilter(event.target.value)\r\n\r\n  const notify = (message, type='success') => {\r\n    setNotification({ message, type })\r\n    setTimeout(() => setNotification({ message: null }), 10000)\r\n  }\r\n \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const existingPerson = persons.find(p => p.name === newName)\r\n\r\n    if (existingPerson) {\r\n      const ok = window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella`)\r\n      \r\n\r\n      \r\n      if (ok) {\r\n        personService\r\n          .replace({\r\n            ...existingPerson,\r\n            number: newNumber\r\n          })\r\n          .then(replacedPerson => {\r\n            setPersons(persons.map(p => p.name === newName ? replacedPerson : p))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            notify(`Henkilön ${newName} numero muutettu`)\r\n          })\r\n          /*\r\n          .catch(() => {\r\n            setPersons(persons.filter(p => p.name !== newName))\r\n            notify(`Henkilön ${newName} oli jo poistettu`, 'error')\r\n          })\r\n          */\r\n      }\r\n\r\n      return\r\n    } \r\n     \r\n  personService\r\n      .create({\r\n        name: newName,\r\n        number: newNumber\r\n      })\r\n      .then(createdPerson => {\r\n        setPersons(persons.concat(createdPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        notify(`Lisättiin ${createdPerson.name}`)\r\n      })\r\n      .catch(error => {\r\n        const teksti = JSON.stringify(error.response.data)\r\n        notify(teksti, 'error')\r\n      })  \r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    const person = persons.find(p => p.id === id)\r\n    const ok = window.confirm(`Poistetaanko ${person.name}`)\r\n    if (ok) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(p => p.id !== id))\r\n        })\r\n      notify(`Poistettiin ${person.name}`)\r\n    }\r\n  }\r\n\r\n  const personsToShow = filter.length === 0\r\n    ? persons \r\n    : persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()) )\r\n\r\n  return (\r\n    <div>\r\n      <h2>Puhelinluettelo</h2>\r\n\r\n      <Notification notification={notification} />\r\n\r\n      <Filter handleChange={handleFilterChange} value={filter} />\r\n\r\n      <h3>lisää uusi</h3>\r\n\r\n      <PersonForm \r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        handleSubmit={handleSubmit}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n      />\r\n\r\n      <h3>Numerot</h3>\r\n\r\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App  />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}